// Use generate_pb_grpc.sh to regenerate protobuf and gRPC service definitions.
// Paths and package names here, together with the directory this file resides in, are critical
// for gRPC to work in multiple languages.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: protos/faucetconfrpc/faucetconfrpc.proto

package faucetconfserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Retrieve YAML config.
type GetConfigFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional: retrieve YAML from this file.
	ConfigFilename string `protobuf:"bytes,1,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
}

func (x *GetConfigFileRequest) Reset() {
	*x = GetConfigFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileRequest) ProtoMessage() {}

func (x *GetConfigFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileRequest.ProtoReflect.Descriptor instead.
func (*GetConfigFileRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetConfigFileRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

type GetConfigFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigYaml string `protobuf:"bytes,1,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
}

func (x *GetConfigFileReply) Reset() {
	*x = GetConfigFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileReply) ProtoMessage() {}

func (x *GetConfigFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileReply.ProtoReflect.Descriptor instead.
func (*GetConfigFileReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigFileReply) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

// Set current YAML config, optionally merging or overwriting.
type SetConfigFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFilename string `protobuf:"bytes,1,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
	ConfigYaml     string `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
	// If true, then merge new YAML dict in with current.
	Merge bool `protobuf:"varint,3,opt,name=merge,proto3" json:"merge,omitempty"`
	// If set, execute YAML delete per DelConfigFromFileRequest, below.
	DelConfigYamlKeys string `protobuf:"bytes,4,opt,name=del_config_yaml_keys,json=delConfigYamlKeys,proto3" json:"del_config_yaml_keys,omitempty"`
}

func (x *SetConfigFileRequest) Reset() {
	*x = SetConfigFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigFileRequest) ProtoMessage() {}

func (x *SetConfigFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigFileRequest.ProtoReflect.Descriptor instead.
func (*SetConfigFileRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{2}
}

func (x *SetConfigFileRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

func (x *SetConfigFileRequest) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

func (x *SetConfigFileRequest) GetMerge() bool {
	if x != nil {
		return x.Merge
	}
	return false
}

func (x *SetConfigFileRequest) GetDelConfigYamlKeys() string {
	if x != nil {
		return x.DelConfigYamlKeys
	}
	return ""
}

type SetConfigFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigFileReply) Reset() {
	*x = SetConfigFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigFileReply) ProtoMessage() {}

func (x *SetConfigFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigFileReply.ProtoReflect.Descriptor instead.
func (*SetConfigFileReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{3}
}

// Delete a YAML config tree/list item.
type DelConfigFromFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional: delete YAML from this file.
	ConfigFilename string `protobuf:"bytes,1,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
	// '[key1, key2', 99]' will delete {key1: {key2: 99}}
	// '[key1, key2']' will delete {key1: {key2}}
	ConfigYamlKeys string `protobuf:"bytes,2,opt,name=config_yaml_keys,json=configYamlKeys,proto3" json:"config_yaml_keys,omitempty"`
}

func (x *DelConfigFromFileRequest) Reset() {
	*x = DelConfigFromFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelConfigFromFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelConfigFromFileRequest) ProtoMessage() {}

func (x *DelConfigFromFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelConfigFromFileRequest.ProtoReflect.Descriptor instead.
func (*DelConfigFromFileRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{4}
}

func (x *DelConfigFromFileRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

func (x *DelConfigFromFileRequest) GetConfigYamlKeys() string {
	if x != nil {
		return x.ConfigYamlKeys
	}
	return ""
}

type DelConfigFromFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelConfigFromFileReply) Reset() {
	*x = DelConfigFromFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelConfigFromFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelConfigFromFileReply) ProtoMessage() {}

func (x *DelConfigFromFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelConfigFromFileReply.ProtoReflect.Descriptor instead.
func (*DelConfigFromFileReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{5}
}

// Set a port to mirror to another DP
type SetRemoteMirrorPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName       string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo       uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	TunnelVid    uint32 `protobuf:"varint,3,opt,name=tunnel_vid,json=tunnelVid,proto3" json:"tunnel_vid,omitempty"`
	RemoteDpName string `protobuf:"bytes,4,opt,name=remote_dp_name,json=remoteDpName,proto3" json:"remote_dp_name,omitempty"`
	RemotePortNo uint32 `protobuf:"varint,5,opt,name=remote_port_no,json=remotePortNo,proto3" json:"remote_port_no,omitempty"`
}

func (x *SetRemoteMirrorPortRequest) Reset() {
	*x = SetRemoteMirrorPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRemoteMirrorPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRemoteMirrorPortRequest) ProtoMessage() {}

func (x *SetRemoteMirrorPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRemoteMirrorPortRequest.ProtoReflect.Descriptor instead.
func (*SetRemoteMirrorPortRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{6}
}

func (x *SetRemoteMirrorPortRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *SetRemoteMirrorPortRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *SetRemoteMirrorPortRequest) GetTunnelVid() uint32 {
	if x != nil {
		return x.TunnelVid
	}
	return 0
}

func (x *SetRemoteMirrorPortRequest) GetRemoteDpName() string {
	if x != nil {
		return x.RemoteDpName
	}
	return ""
}

func (x *SetRemoteMirrorPortRequest) GetRemotePortNo() uint32 {
	if x != nil {
		return x.RemotePortNo
	}
	return 0
}

type SetRemoteMirrorPortReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRemoteMirrorPortReply) Reset() {
	*x = SetRemoteMirrorPortReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRemoteMirrorPortReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRemoteMirrorPortReply) ProtoMessage() {}

func (x *SetRemoteMirrorPortReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRemoteMirrorPortReply.ProtoReflect.Descriptor instead.
func (*SetRemoteMirrorPortReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{7}
}

// Add mirroring to a port.
type AddPortMirrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName       string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo       uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	MirrorPortNo uint32 `protobuf:"varint,3,opt,name=mirror_port_no,json=mirrorPortNo,proto3" json:"mirror_port_no,omitempty"`
}

func (x *AddPortMirrorRequest) Reset() {
	*x = AddPortMirrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortMirrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortMirrorRequest) ProtoMessage() {}

func (x *AddPortMirrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortMirrorRequest.ProtoReflect.Descriptor instead.
func (*AddPortMirrorRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{8}
}

func (x *AddPortMirrorRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *AddPortMirrorRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *AddPortMirrorRequest) GetMirrorPortNo() uint32 {
	if x != nil {
		return x.MirrorPortNo
	}
	return 0
}

type AddPortMirrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPortMirrorReply) Reset() {
	*x = AddPortMirrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortMirrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortMirrorReply) ProtoMessage() {}

func (x *AddPortMirrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortMirrorReply.ProtoReflect.Descriptor instead.
func (*AddPortMirrorReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{9}
}

// Configure a port as a coprocessor port.
type MakeCoprocessorPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName      string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo      uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Strategy    string `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
}

func (x *MakeCoprocessorPortRequest) Reset() {
	*x = MakeCoprocessorPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeCoprocessorPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeCoprocessorPortRequest) ProtoMessage() {}

func (x *MakeCoprocessorPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeCoprocessorPortRequest.ProtoReflect.Descriptor instead.
func (*MakeCoprocessorPortRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{10}
}

func (x *MakeCoprocessorPortRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *MakeCoprocessorPortRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *MakeCoprocessorPortRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MakeCoprocessorPortRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type MakeCoprocessorPortReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MakeCoprocessorPortReply) Reset() {
	*x = MakeCoprocessorPortReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeCoprocessorPortReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeCoprocessorPortReply) ProtoMessage() {}

func (x *MakeCoprocessorPortReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeCoprocessorPortReply.ProtoReflect.Descriptor instead.
func (*MakeCoprocessorPortReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{11}
}

// Remove mirroring from a port.
type RemovePortMirrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName       string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo       uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	MirrorPortNo uint32 `protobuf:"varint,3,opt,name=mirror_port_no,json=mirrorPortNo,proto3" json:"mirror_port_no,omitempty"`
}

func (x *RemovePortMirrorRequest) Reset() {
	*x = RemovePortMirrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortMirrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortMirrorRequest) ProtoMessage() {}

func (x *RemovePortMirrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortMirrorRequest.ProtoReflect.Descriptor instead.
func (*RemovePortMirrorRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{12}
}

func (x *RemovePortMirrorRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *RemovePortMirrorRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *RemovePortMirrorRequest) GetMirrorPortNo() uint32 {
	if x != nil {
		return x.MirrorPortNo
	}
	return 0
}

type RemovePortMirrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePortMirrorReply) Reset() {
	*x = RemovePortMirrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortMirrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortMirrorReply) ProtoMessage() {}

func (x *RemovePortMirrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortMirrorReply.ProtoReflect.Descriptor instead.
func (*RemovePortMirrorReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{13}
}

type ClearPortMirrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName       string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	MirrorPortNo uint32 `protobuf:"varint,2,opt,name=mirror_port_no,json=mirrorPortNo,proto3" json:"mirror_port_no,omitempty"`
}

func (x *ClearPortMirrorRequest) Reset() {
	*x = ClearPortMirrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearPortMirrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearPortMirrorRequest) ProtoMessage() {}

func (x *ClearPortMirrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearPortMirrorRequest.ProtoReflect.Descriptor instead.
func (*ClearPortMirrorRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{14}
}

func (x *ClearPortMirrorRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *ClearPortMirrorRequest) GetMirrorPortNo() uint32 {
	if x != nil {
		return x.MirrorPortNo
	}
	return 0
}

type ClearPortMirrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearPortMirrorReply) Reset() {
	*x = ClearPortMirrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearPortMirrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearPortMirrorReply) ProtoMessage() {}

func (x *ClearPortMirrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearPortMirrorReply.ProtoReflect.Descriptor instead.
func (*ClearPortMirrorReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{15}
}

// Overwrite VLAN output ACL
type SetVlanOutAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VlanName string `protobuf:"bytes,1,opt,name=vlan_name,json=vlanName,proto3" json:"vlan_name,omitempty"`
	AclOut   string `protobuf:"bytes,2,opt,name=acl_out,json=aclOut,proto3" json:"acl_out,omitempty"`
}

func (x *SetVlanOutAclRequest) Reset() {
	*x = SetVlanOutAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVlanOutAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVlanOutAclRequest) ProtoMessage() {}

func (x *SetVlanOutAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVlanOutAclRequest.ProtoReflect.Descriptor instead.
func (*SetVlanOutAclRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{16}
}

func (x *SetVlanOutAclRequest) GetVlanName() string {
	if x != nil {
		return x.VlanName
	}
	return ""
}

func (x *SetVlanOutAclRequest) GetAclOut() string {
	if x != nil {
		return x.AclOut
	}
	return ""
}

type SetVlanOutAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetVlanOutAclReply) Reset() {
	*x = SetVlanOutAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVlanOutAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVlanOutAclReply) ProtoMessage() {}

func (x *SetVlanOutAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVlanOutAclReply.ProtoReflect.Descriptor instead.
func (*SetVlanOutAclReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{17}
}

// Overwrite ACL list on a port.
type SetPortAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Acls   string `protobuf:"bytes,3,opt,name=acls,proto3" json:"acls,omitempty"`
}

func (x *SetPortAclRequest) Reset() {
	*x = SetPortAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPortAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPortAclRequest) ProtoMessage() {}

func (x *SetPortAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPortAclRequest.ProtoReflect.Descriptor instead.
func (*SetPortAclRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{18}
}

func (x *SetPortAclRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *SetPortAclRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *SetPortAclRequest) GetAcls() string {
	if x != nil {
		return x.Acls
	}
	return ""
}

type SetPortAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPortAclReply) Reset() {
	*x = SetPortAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPortAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPortAclReply) ProtoMessage() {}

func (x *SetPortAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPortAclReply.ProtoReflect.Descriptor instead.
func (*SetPortAclReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{19}
}

type AddPortAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Acl    string `protobuf:"bytes,3,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *AddPortAclRequest) Reset() {
	*x = AddPortAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortAclRequest) ProtoMessage() {}

func (x *AddPortAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortAclRequest.ProtoReflect.Descriptor instead.
func (*AddPortAclRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{20}
}

func (x *AddPortAclRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *AddPortAclRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *AddPortAclRequest) GetAcl() string {
	if x != nil {
		return x.Acl
	}
	return ""
}

type AddPortAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPortAclReply) Reset() {
	*x = AddPortAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortAclReply) ProtoMessage() {}

func (x *AddPortAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortAclReply.ProtoReflect.Descriptor instead.
func (*AddPortAclReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{21}
}

// Remove named ACL from port, or all if no ACL name.
type RemovePortAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo uint32 `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Acl    string `protobuf:"bytes,3,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *RemovePortAclRequest) Reset() {
	*x = RemovePortAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortAclRequest) ProtoMessage() {}

func (x *RemovePortAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortAclRequest.ProtoReflect.Descriptor instead.
func (*RemovePortAclRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{22}
}

func (x *RemovePortAclRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *RemovePortAclRequest) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *RemovePortAclRequest) GetAcl() string {
	if x != nil {
		return x.Acl
	}
	return ""
}

type RemovePortAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePortAclReply) Reset() {
	*x = RemovePortAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortAclReply) ProtoMessage() {}

func (x *RemovePortAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortAclReply.ProtoReflect.Descriptor instead.
func (*RemovePortAclReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{23}
}

type SetInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortNo     uint32 `protobuf:"varint,1,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	ConfigYaml string `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
}

func (x *SetInterface) Reset() {
	*x = SetInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInterface) ProtoMessage() {}

func (x *SetInterface) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInterface.ProtoReflect.Descriptor instead.
func (*SetInterface) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{24}
}

func (x *SetInterface) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *SetInterface) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

type SetDpInterfaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName          string          `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	InterfaceConfig []*SetInterface `protobuf:"bytes,2,rep,name=interface_config,json=interfaceConfig,proto3" json:"interface_config,omitempty"`
}

func (x *SetDpInterfaces) Reset() {
	*x = SetDpInterfaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDpInterfaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDpInterfaces) ProtoMessage() {}

func (x *SetDpInterfaces) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDpInterfaces.ProtoReflect.Descriptor instead.
func (*SetDpInterfaces) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{25}
}

func (x *SetDpInterfaces) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *SetDpInterfaces) GetInterfaceConfig() []*SetInterface {
	if x != nil {
		return x.InterfaceConfig
	}
	return nil
}

// Set/replace config for any number of DPs/interfaces.
type SetDpInterfacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfacesConfig []*SetDpInterfaces `protobuf:"bytes,1,rep,name=interfaces_config,json=interfacesConfig,proto3" json:"interfaces_config,omitempty"`
}

func (x *SetDpInterfacesRequest) Reset() {
	*x = SetDpInterfacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDpInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDpInterfacesRequest) ProtoMessage() {}

func (x *SetDpInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDpInterfacesRequest.ProtoReflect.Descriptor instead.
func (*SetDpInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{26}
}

func (x *SetDpInterfacesRequest) GetInterfacesConfig() []*SetDpInterfaces {
	if x != nil {
		return x.InterfacesConfig
	}
	return nil
}

type SetDpInterfacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDpInterfacesReply) Reset() {
	*x = SetDpInterfacesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDpInterfacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDpInterfacesReply) ProtoMessage() {}

func (x *SetDpInterfacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDpInterfacesReply.ProtoReflect.Descriptor instead.
func (*SetDpInterfacesReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{27}
}

// Request DP info.
type GetDpInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional: if specified, only info about this DP will be returned, otherwise all DPs.
	DpName string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	// Optional: look up DPs in only this YAML file.
	ConfigFilename string `protobuf:"bytes,2,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
}

func (x *GetDpInfoRequest) Reset() {
	*x = GetDpInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDpInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDpInfoRequest) ProtoMessage() {}

func (x *GetDpInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDpInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDpInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{28}
}

func (x *GetDpInfoRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *GetDpInfoRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

type InterfaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortNo      uint32 `protobuf:"varint,1,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *InterfaceInfo) Reset() {
	*x = InterfaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceInfo) ProtoMessage() {}

func (x *InterfaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceInfo.ProtoReflect.Descriptor instead.
func (*InterfaceInfo) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{29}
}

func (x *InterfaceInfo) GetPortNo() uint32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *InterfaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterfaceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DpId        uint64           `protobuf:"varint,2,opt,name=dp_id,json=dpId,proto3" json:"dp_id,omitempty"`
	Description string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Interfaces  []*InterfaceInfo `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
}

func (x *DpInfo) Reset() {
	*x = DpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpInfo) ProtoMessage() {}

func (x *DpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpInfo.ProtoReflect.Descriptor instead.
func (*DpInfo) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{30}
}

func (x *DpInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpInfo) GetDpId() uint64 {
	if x != nil {
		return x.DpId
	}
	return 0
}

func (x *DpInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpInfo) GetInterfaces() []*InterfaceInfo {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type GetDpInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dps []*DpInfo `protobuf:"bytes,1,rep,name=dps,proto3" json:"dps,omitempty"`
}

func (x *GetDpInfoReply) Reset() {
	*x = GetDpInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDpInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDpInfoReply) ProtoMessage() {}

func (x *GetDpInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDpInfoReply.ProtoReflect.Descriptor instead.
func (*GetDpInfoReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{31}
}

func (x *GetDpInfoReply) GetDps() []*DpInfo {
	if x != nil {
		return x.Dps
	}
	return nil
}

type DelDpInterfacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfacesConfig []*DpInfo `protobuf:"bytes,1,rep,name=interfaces_config,json=interfacesConfig,proto3" json:"interfaces_config,omitempty"`
	DeleteEmptyDp    bool      `protobuf:"varint,2,opt,name=delete_empty_dp,json=deleteEmptyDp,proto3" json:"delete_empty_dp,omitempty"`
}

func (x *DelDpInterfacesRequest) Reset() {
	*x = DelDpInterfacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDpInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDpInterfacesRequest) ProtoMessage() {}

func (x *DelDpInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDpInterfacesRequest.ProtoReflect.Descriptor instead.
func (*DelDpInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{32}
}

func (x *DelDpInterfacesRequest) GetInterfacesConfig() []*DpInfo {
	if x != nil {
		return x.InterfacesConfig
	}
	return nil
}

func (x *DelDpInterfacesRequest) GetDeleteEmptyDp() bool {
	if x != nil {
		return x.DeleteEmptyDp
	}
	return false
}

type DelDpInterfacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelDpInterfacesReply) Reset() {
	*x = DelDpInterfacesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDpInterfacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDpInterfacesReply) ProtoMessage() {}

func (x *DelDpInterfacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDpInterfacesReply.ProtoReflect.Descriptor instead.
func (*DelDpInterfacesReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{33}
}

type DelDpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfacesConfig []*DpInfo `protobuf:"bytes,1,rep,name=interfaces_config,json=interfacesConfig,proto3" json:"interfaces_config,omitempty"`
}

func (x *DelDpsRequest) Reset() {
	*x = DelDpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDpsRequest) ProtoMessage() {}

func (x *DelDpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDpsRequest.ProtoReflect.Descriptor instead.
func (*DelDpsRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{34}
}

func (x *DelDpsRequest) GetInterfacesConfig() []*DpInfo {
	if x != nil {
		return x.InterfacesConfig
	}
	return nil
}

type DelDpsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelDpsReply) Reset() {
	*x = DelDpsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDpsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDpsReply) ProtoMessage() {}

func (x *DelDpsReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDpsReply.ProtoReflect.Descriptor instead.
func (*DelDpsReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{35}
}

type GetDpNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDpNamesRequest) Reset() {
	*x = GetDpNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDpNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDpNamesRequest) ProtoMessage() {}

func (x *GetDpNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDpNamesRequest.ProtoReflect.Descriptor instead.
func (*GetDpNamesRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{36}
}

type GetDpNamesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName []string `protobuf:"bytes,1,rep,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
}

func (x *GetDpNamesReply) Reset() {
	*x = GetDpNamesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDpNamesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDpNamesReply) ProtoMessage() {}

func (x *GetDpNamesReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDpNamesReply.ProtoReflect.Descriptor instead.
func (*GetDpNamesReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{37}
}

func (x *GetDpNamesReply) GetDpName() []string {
	if x != nil {
		return x.DpName
	}
	return nil
}

type GetDpIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDpIDsRequest) Reset() {
	*x = GetDpIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDpIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDpIDsRequest) ProtoMessage() {}

func (x *GetDpIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDpIDsRequest.ProtoReflect.Descriptor instead.
func (*GetDpIDsRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{38}
}

type GetDpIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpId []uint64 `protobuf:"varint,1,rep,packed,name=dp_id,json=dpId,proto3" json:"dp_id,omitempty"`
}

func (x *GetDpIDsReply) Reset() {
	*x = GetDpIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDpIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDpIDsReply) ProtoMessage() {}

func (x *GetDpIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDpIDsReply.ProtoReflect.Descriptor instead.
func (*GetDpIDsReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{39}
}

func (x *GetDpIDsReply) GetDpId() []uint64 {
	if x != nil {
		return x.DpId
	}
	return nil
}

type GetAclNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclName []string `protobuf:"bytes,1,rep,name=acl_name,json=aclName,proto3" json:"acl_name,omitempty"`
}

func (x *GetAclNamesRequest) Reset() {
	*x = GetAclNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAclNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAclNamesRequest) ProtoMessage() {}

func (x *GetAclNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAclNamesRequest.ProtoReflect.Descriptor instead.
func (*GetAclNamesRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{40}
}

func (x *GetAclNamesRequest) GetAclName() []string {
	if x != nil {
		return x.AclName
	}
	return nil
}

type GetAclNamesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclName []string `protobuf:"bytes,1,rep,name=acl_name,json=aclName,proto3" json:"acl_name,omitempty"`
}

func (x *GetAclNamesReply) Reset() {
	*x = GetAclNamesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAclNamesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAclNamesReply) ProtoMessage() {}

func (x *GetAclNamesReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAclNamesReply.ProtoReflect.Descriptor instead.
func (*GetAclNamesReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{41}
}

func (x *GetAclNamesReply) GetAclName() []string {
	if x != nil {
		return x.AclName
	}
	return nil
}

type SetDp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName     string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	ConfigYaml string `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
}

func (x *SetDp) Reset() {
	*x = SetDp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDp) ProtoMessage() {}

func (x *SetDp) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDp.ProtoReflect.Descriptor instead.
func (*SetDp) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{42}
}

func (x *SetDp) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *SetDp) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

type SetDpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpConfig []*SetDp `protobuf:"bytes,1,rep,name=dp_config,json=dpConfig,proto3" json:"dp_config,omitempty"`
}

func (x *SetDpsRequest) Reset() {
	*x = SetDpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDpsRequest) ProtoMessage() {}

func (x *SetDpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDpsRequest.ProtoReflect.Descriptor instead.
func (*SetDpsRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{43}
}

func (x *SetDpsRequest) GetDpConfig() []*SetDp {
	if x != nil {
		return x.DpConfig
	}
	return nil
}

type SetDpsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDpsReply) Reset() {
	*x = SetDpsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDpsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDpsReply) ProtoMessage() {}

func (x *SetDpsReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDpsReply.ProtoReflect.Descriptor instead.
func (*SetDpsReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{44}
}

var File_protos_faucetconfrpc_faucetconfrpc_proto protoreflect.FileDescriptor

var file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e,
	0x66, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61,
	0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x59, 0x61, 0x6d, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x14, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x14,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x6d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x4b,
	0x65, 0x79, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb9, 0x01,
	0x0a, 0x1a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x1a,
	0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x61,
	0x6b, 0x65, 0x43, 0x6f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x71, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72,
	0x74, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x57, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x56, 0x6c, 0x61, 0x6e, 0x4f, 0x75,
	0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x6c, 0x4f, 0x75,
	0x74, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x56, 0x6c, 0x61, 0x6e, 0x4f, 0x75, 0x74, 0x41,
	0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x59, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x63,
	0x6c, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x57, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x63, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x11,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x5a, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41,
	0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x63, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x14, 0x0a,
	0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x48, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x75, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x68, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e,
	0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x10, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x16,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x0d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a,
	0x06, 0x44, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x64,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x70, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x64, 0x70,
	0x73, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x11,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74,
	0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x5f, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x70, 0x22, 0x16, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x56, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x44, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x0d, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x44, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x2a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x44, 0x70, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x24,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x70, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x13, 0x0a, 0x05, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04,
	0x64, 0x70, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x44, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x45, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x44, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x61,
	0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x70, 0x52, 0x08, 0x64, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x0d,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x8b, 0x0f,
	0x0a, 0x10, 0x46, 0x61, 0x75, 0x63, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x5f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61,
	0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e,
	0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66,
	0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f,
	0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x75,
	0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x68, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0f,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x28, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63,
	0x6c, 0x12, 0x23, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x12, 0x26, 0x2e, 0x66,
	0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e,
	0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x12, 0x23, 0x2e, 0x66, 0x61, 0x75,
	0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74,
	0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65,
	0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66,
	0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x44, 0x70,
	0x73, 0x12, 0x1f, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x2e, 0x66, 0x61, 0x75,
	0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65,
	0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e,
	0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x44, 0x70, 0x49, 0x44, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x61, 0x75,
	0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x70, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x70, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x24, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f,
	0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x53,
	0x65, 0x74, 0x44, 0x70, 0x73, 0x12, 0x1f, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f,
	0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x70, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x13, 0x4d, 0x61, 0x6b, 0x65, 0x43,
	0x6f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2c,
	0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66,
	0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x56, 0x6c, 0x61, 0x6e, 0x4f, 0x75, 0x74, 0x41, 0x63, 0x6c, 0x12, 0x26, 0x2e, 0x66, 0x61,
	0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x56, 0x6c, 0x61, 0x6e, 0x4f, 0x75, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x6c, 0x61, 0x6e, 0x4f, 0x75,
	0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x66,
	0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescOnce sync.Once
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData = file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc
)

func file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP() []byte {
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescOnce.Do(func() {
		file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData)
	})
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData
}

var file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_protos_faucetconfrpc_faucetconfrpc_proto_goTypes = []any{
	(*GetConfigFileRequest)(nil),       // 0: faucetconfserver.GetConfigFileRequest
	(*GetConfigFileReply)(nil),         // 1: faucetconfserver.GetConfigFileReply
	(*SetConfigFileRequest)(nil),       // 2: faucetconfserver.SetConfigFileRequest
	(*SetConfigFileReply)(nil),         // 3: faucetconfserver.SetConfigFileReply
	(*DelConfigFromFileRequest)(nil),   // 4: faucetconfserver.DelConfigFromFileRequest
	(*DelConfigFromFileReply)(nil),     // 5: faucetconfserver.DelConfigFromFileReply
	(*SetRemoteMirrorPortRequest)(nil), // 6: faucetconfserver.SetRemoteMirrorPortRequest
	(*SetRemoteMirrorPortReply)(nil),   // 7: faucetconfserver.SetRemoteMirrorPortReply
	(*AddPortMirrorRequest)(nil),       // 8: faucetconfserver.AddPortMirrorRequest
	(*AddPortMirrorReply)(nil),         // 9: faucetconfserver.AddPortMirrorReply
	(*MakeCoprocessorPortRequest)(nil), // 10: faucetconfserver.MakeCoprocessorPortRequest
	(*MakeCoprocessorPortReply)(nil),   // 11: faucetconfserver.MakeCoprocessorPortReply
	(*RemovePortMirrorRequest)(nil),    // 12: faucetconfserver.RemovePortMirrorRequest
	(*RemovePortMirrorReply)(nil),      // 13: faucetconfserver.RemovePortMirrorReply
	(*ClearPortMirrorRequest)(nil),     // 14: faucetconfserver.ClearPortMirrorRequest
	(*ClearPortMirrorReply)(nil),       // 15: faucetconfserver.ClearPortMirrorReply
	(*SetVlanOutAclRequest)(nil),       // 16: faucetconfserver.SetVlanOutAclRequest
	(*SetVlanOutAclReply)(nil),         // 17: faucetconfserver.SetVlanOutAclReply
	(*SetPortAclRequest)(nil),          // 18: faucetconfserver.SetPortAclRequest
	(*SetPortAclReply)(nil),            // 19: faucetconfserver.SetPortAclReply
	(*AddPortAclRequest)(nil),          // 20: faucetconfserver.AddPortAclRequest
	(*AddPortAclReply)(nil),            // 21: faucetconfserver.AddPortAclReply
	(*RemovePortAclRequest)(nil),       // 22: faucetconfserver.RemovePortAclRequest
	(*RemovePortAclReply)(nil),         // 23: faucetconfserver.RemovePortAclReply
	(*SetInterface)(nil),               // 24: faucetconfserver.SetInterface
	(*SetDpInterfaces)(nil),            // 25: faucetconfserver.SetDpInterfaces
	(*SetDpInterfacesRequest)(nil),     // 26: faucetconfserver.SetDpInterfacesRequest
	(*SetDpInterfacesReply)(nil),       // 27: faucetconfserver.SetDpInterfacesReply
	(*GetDpInfoRequest)(nil),           // 28: faucetconfserver.GetDpInfoRequest
	(*InterfaceInfo)(nil),              // 29: faucetconfserver.InterfaceInfo
	(*DpInfo)(nil),                     // 30: faucetconfserver.DpInfo
	(*GetDpInfoReply)(nil),             // 31: faucetconfserver.GetDpInfoReply
	(*DelDpInterfacesRequest)(nil),     // 32: faucetconfserver.DelDpInterfacesRequest
	(*DelDpInterfacesReply)(nil),       // 33: faucetconfserver.DelDpInterfacesReply
	(*DelDpsRequest)(nil),              // 34: faucetconfserver.DelDpsRequest
	(*DelDpsReply)(nil),                // 35: faucetconfserver.DelDpsReply
	(*GetDpNamesRequest)(nil),          // 36: faucetconfserver.GetDpNamesRequest
	(*GetDpNamesReply)(nil),            // 37: faucetconfserver.GetDpNamesReply
	(*GetDpIDsRequest)(nil),            // 38: faucetconfserver.GetDpIDsRequest
	(*GetDpIDsReply)(nil),              // 39: faucetconfserver.GetDpIDsReply
	(*GetAclNamesRequest)(nil),         // 40: faucetconfserver.GetAclNamesRequest
	(*GetAclNamesReply)(nil),           // 41: faucetconfserver.GetAclNamesReply
	(*SetDp)(nil),                      // 42: faucetconfserver.SetDp
	(*SetDpsRequest)(nil),              // 43: faucetconfserver.SetDpsRequest
	(*SetDpsReply)(nil),                // 44: faucetconfserver.SetDpsReply
}
var file_protos_faucetconfrpc_faucetconfrpc_proto_depIdxs = []int32{
	24, // 0: faucetconfserver.SetDpInterfaces.interface_config:type_name -> faucetconfserver.SetInterface
	25, // 1: faucetconfserver.SetDpInterfacesRequest.interfaces_config:type_name -> faucetconfserver.SetDpInterfaces
	29, // 2: faucetconfserver.DpInfo.interfaces:type_name -> faucetconfserver.InterfaceInfo
	30, // 3: faucetconfserver.GetDpInfoReply.dps:type_name -> faucetconfserver.DpInfo
	30, // 4: faucetconfserver.DelDpInterfacesRequest.interfaces_config:type_name -> faucetconfserver.DpInfo
	30, // 5: faucetconfserver.DelDpsRequest.interfaces_config:type_name -> faucetconfserver.DpInfo
	42, // 6: faucetconfserver.SetDpsRequest.dp_config:type_name -> faucetconfserver.SetDp
	0,  // 7: faucetconfserver.FaucetConfServer.GetConfigFile:input_type -> faucetconfserver.GetConfigFileRequest
	2,  // 8: faucetconfserver.FaucetConfServer.SetConfigFile:input_type -> faucetconfserver.SetConfigFileRequest
	4,  // 9: faucetconfserver.FaucetConfServer.DelConfigFromFile:input_type -> faucetconfserver.DelConfigFromFileRequest
	8,  // 10: faucetconfserver.FaucetConfServer.AddPortMirror:input_type -> faucetconfserver.AddPortMirrorRequest
	12, // 11: faucetconfserver.FaucetConfServer.RemovePortMirror:input_type -> faucetconfserver.RemovePortMirrorRequest
	14, // 12: faucetconfserver.FaucetConfServer.ClearPortMirror:input_type -> faucetconfserver.ClearPortMirrorRequest
	20, // 13: faucetconfserver.FaucetConfServer.AddPortAcl:input_type -> faucetconfserver.AddPortAclRequest
	22, // 14: faucetconfserver.FaucetConfServer.RemovePortAcl:input_type -> faucetconfserver.RemovePortAclRequest
	18, // 15: faucetconfserver.FaucetConfServer.SetPortAcl:input_type -> faucetconfserver.SetPortAclRequest
	26, // 16: faucetconfserver.FaucetConfServer.SetDpInterfaces:input_type -> faucetconfserver.SetDpInterfacesRequest
	28, // 17: faucetconfserver.FaucetConfServer.GetDpInfo:input_type -> faucetconfserver.GetDpInfoRequest
	32, // 18: faucetconfserver.FaucetConfServer.DelDpInterfaces:input_type -> faucetconfserver.DelDpInterfacesRequest
	34, // 19: faucetconfserver.FaucetConfServer.DelDps:input_type -> faucetconfserver.DelDpsRequest
	6,  // 20: faucetconfserver.FaucetConfServer.SetRemoteMirrorPort:input_type -> faucetconfserver.SetRemoteMirrorPortRequest
	36, // 21: faucetconfserver.FaucetConfServer.GetDpNames:input_type -> faucetconfserver.GetDpNamesRequest
	38, // 22: faucetconfserver.FaucetConfServer.GetDpIDs:input_type -> faucetconfserver.GetDpIDsRequest
	40, // 23: faucetconfserver.FaucetConfServer.GetAclNames:input_type -> faucetconfserver.GetAclNamesRequest
	43, // 24: faucetconfserver.FaucetConfServer.SetDps:input_type -> faucetconfserver.SetDpsRequest
	10, // 25: faucetconfserver.FaucetConfServer.MakeCoprocessorPort:input_type -> faucetconfserver.MakeCoprocessorPortRequest
	16, // 26: faucetconfserver.FaucetConfServer.SetVlanOutAcl:input_type -> faucetconfserver.SetVlanOutAclRequest
	1,  // 27: faucetconfserver.FaucetConfServer.GetConfigFile:output_type -> faucetconfserver.GetConfigFileReply
	3,  // 28: faucetconfserver.FaucetConfServer.SetConfigFile:output_type -> faucetconfserver.SetConfigFileReply
	5,  // 29: faucetconfserver.FaucetConfServer.DelConfigFromFile:output_type -> faucetconfserver.DelConfigFromFileReply
	9,  // 30: faucetconfserver.FaucetConfServer.AddPortMirror:output_type -> faucetconfserver.AddPortMirrorReply
	13, // 31: faucetconfserver.FaucetConfServer.RemovePortMirror:output_type -> faucetconfserver.RemovePortMirrorReply
	15, // 32: faucetconfserver.FaucetConfServer.ClearPortMirror:output_type -> faucetconfserver.ClearPortMirrorReply
	21, // 33: faucetconfserver.FaucetConfServer.AddPortAcl:output_type -> faucetconfserver.AddPortAclReply
	23, // 34: faucetconfserver.FaucetConfServer.RemovePortAcl:output_type -> faucetconfserver.RemovePortAclReply
	19, // 35: faucetconfserver.FaucetConfServer.SetPortAcl:output_type -> faucetconfserver.SetPortAclReply
	27, // 36: faucetconfserver.FaucetConfServer.SetDpInterfaces:output_type -> faucetconfserver.SetDpInterfacesReply
	31, // 37: faucetconfserver.FaucetConfServer.GetDpInfo:output_type -> faucetconfserver.GetDpInfoReply
	33, // 38: faucetconfserver.FaucetConfServer.DelDpInterfaces:output_type -> faucetconfserver.DelDpInterfacesReply
	35, // 39: faucetconfserver.FaucetConfServer.DelDps:output_type -> faucetconfserver.DelDpsReply
	7,  // 40: faucetconfserver.FaucetConfServer.SetRemoteMirrorPort:output_type -> faucetconfserver.SetRemoteMirrorPortReply
	37, // 41: faucetconfserver.FaucetConfServer.GetDpNames:output_type -> faucetconfserver.GetDpNamesReply
	39, // 42: faucetconfserver.FaucetConfServer.GetDpIDs:output_type -> faucetconfserver.GetDpIDsReply
	41, // 43: faucetconfserver.FaucetConfServer.GetAclNames:output_type -> faucetconfserver.GetAclNamesReply
	44, // 44: faucetconfserver.FaucetConfServer.SetDps:output_type -> faucetconfserver.SetDpsReply
	11, // 45: faucetconfserver.FaucetConfServer.MakeCoprocessorPort:output_type -> faucetconfserver.MakeCoprocessorPortReply
	17, // 46: faucetconfserver.FaucetConfServer.SetVlanOutAcl:output_type -> faucetconfserver.SetVlanOutAclReply
	27, // [27:47] is the sub-list for method output_type
	7,  // [7:27] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protos_faucetconfrpc_faucetconfrpc_proto_init() }
func file_protos_faucetconfrpc_faucetconfrpc_proto_init() {
	if File_protos_faucetconfrpc_faucetconfrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetConfigFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SetConfigFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SetConfigFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DelConfigFromFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DelConfigFromFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SetRemoteMirrorPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SetRemoteMirrorPortReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AddPortMirrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddPortMirrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MakeCoprocessorPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MakeCoprocessorPortReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePortMirrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePortMirrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ClearPortMirrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ClearPortMirrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SetVlanOutAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SetVlanOutAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SetPortAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SetPortAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AddPortAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AddPortAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePortAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RemovePortAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*SetInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SetDpInterfaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*SetDpInterfacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*SetDpInterfacesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetDpInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*InterfaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*DpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetDpInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*DelDpInterfacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*DelDpInterfacesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*DelDpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*DelDpsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetDpNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetDpNamesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetDpIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GetDpIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetAclNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetAclNamesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*SetDp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*SetDpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*SetDpsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_faucetconfrpc_faucetconfrpc_proto_goTypes,
		DependencyIndexes: file_protos_faucetconfrpc_faucetconfrpc_proto_depIdxs,
		MessageInfos:      file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes,
	}.Build()
	File_protos_faucetconfrpc_faucetconfrpc_proto = out.File
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc = nil
	file_protos_faucetconfrpc_faucetconfrpc_proto_goTypes = nil
	file_protos_faucetconfrpc_faucetconfrpc_proto_depIdxs = nil
}
